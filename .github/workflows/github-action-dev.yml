# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: create remote directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ubuntu
          key: ${{ secrets.DEV_KEY }}
          script: mkdir -p /home/ubuntu/srv/ubuntu

      - name: copy source via ssh key
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete
          remote_path: /home/ubuntu/srv/ubuntu
          remote_host: ${{ secrets.DEV_HOST }}
          remote_user: ubuntu
          remote_key: ${{ secrets.DEV_KEY }}

      ## create application-dev.yml
      - name: make application-dev.yml
        run: |
          ## create application-dev.yml
          cd ./src/main/resources
          
          # application-database.yml 파일 생성
          touch ./application-dev.yml
          
          # GitHub-Actions 에서 설정한 값을 application-dev.yml 파일에 쓰기
          echo "${{ secrets.DEV_YML }}" >> ./application-dev.yml
        shell: bash

      ## gradle build
      - name: Build with Gradle
        run: ./gradlew bootJar

      ## 웹 이미지 빌드 및 도커허브에 push
      - name: web docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }}/dev-modutime-web .
          docker push ${{ secrets.DOCKER_REPO }}/dev-modutime-web

      ## docker compose up
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ubuntu
          key: ${{ secrets.DEV_KEY }}
          script: |
            cd /home/ubuntu/srv/ubuntu
            sudo sh install-docker.sh
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/dev-modutime-web
            sudo docker pull ${{ secrets.DOCKER_REPO }}/dev-modutime-nginx
            sudo docker-compose up -d
            sudo docker image prune -f
